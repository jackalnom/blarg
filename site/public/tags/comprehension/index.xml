<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comprehension on BonnyCode</title>
    <link>https://www.bonnycode.com/tags/comprehension/</link>
    <description>Recent content in Comprehension on BonnyCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Mar 2008 00:08:53 +0000</lastBuildDate><atom:link href="https://www.bonnycode.com/tags/comprehension/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code Comprehension</title>
      <link>https://www.bonnycode.com/posts/code-comprehens/</link>
      <pubDate>Mon, 24 Mar 2008 00:08:53 +0000</pubDate>
      
      <guid>https://www.bonnycode.com/posts/code-comprehens/</guid>
      <description>&lt;p&gt;Being a good software developer has as much to do with understanding code as it does with writing new code. When writing new code be sure you understand the existing assumptions.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;How old are you?&amp;#34;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Integer age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Integer.&lt;span style=&#34;color:#a6e22e&#34;&gt;getInteger&lt;/span&gt;(System.&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;());  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(String.&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Congratulations! You are %d years old.&amp;#34;&lt;/span&gt;, age));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As cool as this program looks, it doesn&amp;rsquo;t actually work. At the risk of offending a developer from Sun Microsystems, &lt;a href=&#34;http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Integer.html#getInteger(java.lang.String)&#34;&gt;Integer.getInteger&lt;/a&gt; is both badly misplaced (low cohesion) and deceptively named. The lesson here is not to berate the poor developer who designed getInteger but to avoid programs like what is shown above. Don&amp;rsquo;t make assumptions about a method&amp;rsquo;s behavior or what a variable stores purely by its name and take the time to do the research.&lt;/p&gt;
&lt;p&gt;Code comprehension is always important. Be especially cautious when dealing with third party code or your company&amp;rsquo;s legacy code. The code was likely developed using different coding standards, conventions, and best practices than you would assume.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
